name: k26-default-bitstreams # you probably want to 'snapcraft register <name>'
base: core24 # the base snap is the execution environment for this snap
adopt-info: version
summary: An example of how to create a snap to interface with FPGAd
description: An example of how to create a snap to interface with FPGAd
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots
platforms:
  arm64:
    build-on:
      - amd64
    build-for:
      - arm64
plugs:
  fpgad-dbus:
    interface: dbus
    bus: system
    name: com.canonical.fpgad
apps:
  k26-default-bitstreams:
    command: bin/k26-default-bitstreams
    daemon: simple
    install-mode: enable
    plugs:
      - fpgad-dbus
    environment:
      RUST_LOG: trace
parts:
  version:
    plugin: nil
    source: .
    build-snaps:
      - jq
    override-pull: |
      craftctl default
      cargo_version=$(cargo metadata --no-deps --format-version 1 | jq -r .packages[0].version)
      craftctl set version="$cargo_version+git$(date +'%Y%m%d').$(git describe --always --exclude '*')"
  k26-default-bitstreams:
    plugin: rust
    source: .
    #    rust-path:
    #      - .
    build-packages:
      - gcc-aarch64-linux-gnu
      - libc6-dev-arm64-cross
    override-build: |
      rustup target add aarch64-unknown-linux-gnu
      export CC=aarch64-linux-gnu-gcc
      export RUSTFLAGS="-C linker=aarch64-linux-gnu-gcc"
      cargo build --workspace --release --target=aarch64-unknown-linux-gnu
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp target/aarch64-unknown-linux-gnu/release/k26-default-bitstreams $SNAPCRAFT_PART_INSTALL/bin/
  bitstream-data:
    plugin: dump
    source: ./data/
    source-type: local
    organize:
      k26-starter-kits: data/k26-starter-kits
